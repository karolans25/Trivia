{"html": {"pregunta-1": {"name": "<strong>1) \u00bfQu\u00e9 es HTML?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 2", "HTML es la abreviatura de HyperText Markup Language: es el lenguaje de la World Wide Web. Es un lenguaje de formato de texto est\u00e1ndar usado para crear y mostrar p\u00e1ginas en la Web. Los documentos HTML est\u00e1n compuestos de dos cosas: contenido y &nbsp;etiquetas que le dan formato para que se muestre correctamente en las p\u00e1ginas."], "correcta": "2"}, "pregunta-2": {"name": "<strong>2) \u00bfQu\u00e9 son las etiquetas?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 2", "Es el contenido que se coloca entre las etiquetas HTML, con la finalidad de darle formato correctamente. Usa el s\u00edmbolo menor que (&lt;) y el mayor que (&gt;). Un s\u00edmbolo de barra oblicua tambi\u00e9n se utiliza como etiqueta de cierre <strong>Ejemplo:</strong>&lt;strong&gt;sample&lt;/strong&gt;"], "correcta": "2"}, "pregunta-3": {"name": "<strong>3) \u00bfTodas las etiquetas HTML vienen en pares?</strong>", "opciones": ["No, algunas etiquetas HTML simples, &nbsp;no necesitan una etiqueta de cierre. Algunos ejemplos son las etiquetas &lt;img&gt; y &lt;br&gt;.", "Opci\u00f3n 2", "Opci\u00f3n 3"], "correcta": "0"}, "pregunta-4": {"name": "<strong>4) \u00bfCu\u00e1les son algunas de las listas comunes que se pueden utilizar al dise\u00f1ar una p\u00e1gina?</strong>", "opciones": ["Opci\u00f3n 1", "Se puede insertar cualquiera o una combinaci\u00f3n de los siguientes tipos de lista:<br>- &nbsp;clasificada<br>- &nbsp;no ordenada<br>- de definiciones<br>- &nbsp;de men\u00fa<br>- &nbsp;de directorio<br>Estos tipos de lista, cada uno usa un conjunto de etiquetas distintas para componer", "Opci\u00f3n 3"], "correcta": "1"}, "pregunta-5": {"name": "<strong>5) \u00bfC\u00f3mo se inserta un comentario en HTML?</strong>", "opciones": ["Los comentarios en HTML empiezan con \"&lt;!-\" y terminan con \"-&gt;\".<strong>Ejemplo</strong>:&lt;!-- A SAMPLE COMMENT --&gt;", "Opci\u00f3n 2", "Opci\u00f3n 3"], "correcta": "0"}, "pregunta-6": {"name": "<strong>6) \u00bfTodas las entidades de caracteres se muestran correctamente en todos los sistemas?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 2", "No, &nbsp;algunas entidades de caracteres no se pueden mostrar, cuando el sistema operativo en el que se ejecuta el navegador no admite los caracteres. Cuando sucede esto, los caracteres se presentan como cuadros."], "correcta": "2"}, "pregunta-7": {"name": "<strong>7) \u00bfQu\u00e9 es un mapa de imagen?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 2", "El mapa de im\u00e1genes permite enlazar muchas p\u00e1ginas web distintas, usando una sola imagen. Tambi\u00e9n, puede definir formas en las im\u00e1genes que desea que formen parte de un mapeo de im\u00e1genes."], "correcta": "2"}, "pregunta-8": {"name": "<strong>8) \u00bfCu\u00e1l es la ventaja de colapsar el espacio en blanco?</strong>", "opciones": ["Opci\u00f3n 1", "Son una secuencia en blanco de caracteres de espacio, que se trata como un car\u00e1cter de espacio \u00fanico en HTML. Motivado a que el navegador colapsa m\u00faltiples espacios en un solo espacio, puede sangrar l\u00edneas de texto sin preocuparse por los muchos espacios. Esto permite organizar el c\u00f3digo HTML en un formato &nbsp;m\u00e1s legible.", "Opci\u00f3n 3"], "correcta": "1"}, "pregunta-9": {"name": "<strong>9) \u00bfSe pueden establecer valores de atributo para cualquier cosa o hay valores espec\u00edficos que ellos aceptan?</strong>", "opciones": ["Algunos valores de atributo s\u00f3lo &nbsp;pueden establecerse en valores predefinidos. Otros atributos aceptan cualquier valor num\u00e9rico, que represente el n\u00famero de p\u00edxeles de un tama\u00f1o.", "Opci\u00f3n 2", "Opci\u00f3n 3"], "correcta": "0"}, "pregunta-10": {"name": "<strong>10) \u00bfC\u00f3mo se inserta un s\u00edmbolo de copyright en una p\u00e1gina del navegador?</strong>", "opciones": ["Para insertar el s\u00edmbolo de copyright, se tiene que escribir &amp;copy; o &amp; #169; en&nbsp; un archivo HTML.", "Opci\u00f3n 2", "Opci\u00f3n 3"], "correcta": "0"}, "pregunta-11": {"name": "<strong>11) \u00bfC\u00f3mo se crean enlaces a secciones dentro de la misma p\u00e1gina?</strong>", "opciones": ["Opci\u00f3n 1", "Los enlaces se crean usando la etiqueta &lt;a&gt;, con referencia mediante el uso del s\u00edmbolo del n\u00famero (#). <strong>Ejemplo</strong>: puede tener una l\u00ednea como &lt;a href=\"#Los mejores\"&gt;Volver a la parte superior &lt;/a&gt;, lo que da lugar a la aparici\u00f3n de las palabras 'Volver a la parte superior' en la p\u00e1gina web y enlaces a un marcador llamado 'Los mejores'. A continuaci\u00f3n, se escribe un comando de etiqueta separado como &lt;a name=\"Los mejores\"&gt; en alg\u00fan lugar en la parte superior de la misma p\u00e1gina web para que el usuario est\u00e9 vinculado a ese punto cuando haga clic en 'Volver a la parte superior'.", "Opci\u00f3n 3"], "correcta": "1"}, "pregunta-12": {"name": "<strong>12) \u00bfHay alguna manera de mantener los elementos de la lista directamente en un archivo HTML?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 2", "Se puede hacer usando sangr\u00edas para mantener los elementos de lista rectos. Si se usa sangria cada lista subanunciada m\u00e1s all\u00e1 de la lista matriz que la contiene puedes determinar de un simple vistazo las diferentes listas y los elementos que contiene."], "correcta": "2"}, "pregunta-13": {"name": "<strong>13) Si ves una direcci\u00f3n web en una revista, \u00bfa qu\u00e9 p\u00e1gina web apunta?</strong>", "opciones": ["Opci\u00f3n 1", "Cada p\u00e1gina web en la web puede tener una direcci\u00f3n web por separado. Casi todas estas direcciones son relativas a la p\u00e1gina web de mayor importancia. La direcci\u00f3n web publicada en las revistas normalmente apunta a la m\u00e1s importante. Desde esta p\u00e1gina, puede entrar a las dem\u00e1s p\u00e1ginas del sitio web.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-14": {"name": "<strong>14) \u00bfCu\u00e1l es el uso del texto alternativo en el mapeo de im\u00e1genes?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 2", "Se usa el texto alternativo, cuando se utilizan mapas de im\u00e1genes para poder poner un texto descriptivo en cada enlace de zona activa."], "correcta": "2"}, "pregunta-15": {"name": "<strong>15) \u00bfFuncionan los archivos HTML m\u00e1s antiguos en los navegadores m\u00e1s nuevos?</strong>", "opciones": ["Opci\u00f3n 1", "S\u00ed, los archivos HTML antiguos son compatibles con el est\u00e1ndar HTML, y puede ser posible que algunas funciones no funcionen.", "Opci\u00f3n 3"], "correcta": "1"}, "pregunta-16": {"name": "<strong>16) \u00bfUn hiperv\u00ednculo se aplica s\u00f3lo al texto?</strong>", "opciones": ["No, los hiperv\u00ednculos se pueden usar en el texto y en las im\u00e1genes. Lo que indica &nbsp;que puede convertir una imagen en un enlace, que permita a los usuarios enlazar a otra p\u00e1gina al hacer clic. Rodee la imagen dentro de las combinaciones de etiquetas &lt;a href=\" \"&gt;...&lt;/a&gt;.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-17": {"name": "<strong>17) Si el sistema operativo del usuario no soporta el car\u00e1cter necesario, \u00bfc\u00f3mo se puede representar el s\u00edmbolo?</strong>", "opciones": ["Opci\u00f3n 1", "Se puede mostrar como una imagen.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-18": {"name": "<strong>18) \u00bfC\u00f3mo se cambia el tipo de n\u00famero en el medio de una lista?</strong>", "opciones": ["El atributo type puede usarse para cambiar el tipo de numeraci\u00f3n de cualquier elemento de la lista. El atributo de valor puede cambiar el \u00edndice num\u00e9rico<strong>.</strong>", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-19": {"name": "<strong>19) \u00bfQu\u00e9 son las hojas de estilo?</strong>", "opciones": ["Las hojas de estilo: son las que permiten crear plantillas de estilo consistentes, transportables y definidas. Estas plantillas se vinculan a varias p\u00e1ginas web distintas, que facilita el mantenimiento y cambio de aspecto de las p\u00e1ginas web dentro del sitio. ", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-20": {"name": "<strong>20) Indique los tipos de vi\u00f1etas disponibles en HTML </strong>", "opciones": ["Opci\u00f3n 1", "Con las listas ordenadas, puedes utilizar distintas vi\u00f1etas, incluyendo n\u00fameros alfab\u00e9ticos y romanos. El atributo de tipo para listas desordenadas&nbsp; puede ser cuadrado, disco o c\u00edrculo.<strong>&nbsp;</strong>", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-21": {"name": "<strong>21) \u00bfC\u00f3mo se crea un texto multicolor en una p\u00e1gina web?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Para crear texto con muchos colores, usa &nbsp;etiquetas &lt;font color=\"color\"&gt;...&lt;/font&gt; para cada car\u00e1cter que desee aplicar color. Puede usar la combinaci\u00f3n de etiquetas tantas veces como se necesite, rodeando un solo car\u00e1cter o una palabra entera. "], "correcta": "2"}, "pregunta-22": {"name": "<strong>22) \u00bfPor qu\u00e9 hay valores de entidades de caracteres num\u00e9ricos y de caracteres con nombre?</strong>", "opciones": ["Opci\u00f3n 1", "Los valores num\u00e9ricos se toman de los valores ASCII de los diferentes caracteres, pero a veces son dif\u00edciles de recordar. Motivado a esto, se crearon valores de entidades de caracteres con nombre que facilitan a los dise\u00f1adores de p\u00e1ginas web su uso. ", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-23": {"name": "<strong>23) Escriba una secuencia de etiquetas de tabla HTML que produzca lo siguiente:<br>50 unidades 100 500<br>10 unidades 5 50<br></strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "&lt;table&gt; <br>&lt;tr&gt; <br>&lt;td&gt;50 pcs&lt;/td&gt; <br>&lt;td&gt; <br>100&lt;/td&gt; <br>&lt;td&gt;500&lt;/td&gt; <br>&lt;/tr&gt; <br>&lt;tr&gt; <br>&lt;td&gt;10 pcs&lt;/td&gt; <br>&lt;td&gt;5&lt;/td&gt; <br>&lt;td&gt;50&lt;/td&gt; <br>&lt;/tr&gt; <br>&lt;/table&gt; <br>"], "correcta": "2"}, "pregunta-24": {"name": "<strong>24) \u00bfCu\u00e1l es la ventaja de agrupar varias casillas de verificaci\u00f3n?</strong>", "opciones": ["Opci\u00f3n 1", "Agruparlas ayuda a organizarlas. Los botones de la casilla de verificaci\u00f3n pueden tener su nombre y no es necesario que pertenezcan a un grupo. Una sola p\u00e1gina web puede tener muchos grupos, distintos de casillas de verificaci\u00f3n.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-25": {"name": "<strong>25) \u00bfQu\u00e9 suceder\u00e1 si se superponen conjuntos de etiquetas?</strong>", "opciones": ["S\u00f3lo puede ser reconocida la primera etiqueta. Este problema lo vas a encontrar cuando el texto no se muestre correctamente en la pantalla del navegador.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-26": {"name": "<strong>26) \u00bfQu\u00e9 son los applets?</strong>", "opciones": ["Los applets son programas peque\u00f1os que pueden incrustarse en las p\u00e1ginas web para realizar alguna funci\u00f3n espec\u00edfica como animaciones, c\u00e1lculos y procesamiento de informaci\u00f3n. Los applets est\u00e1n escritos en lenguaje Java.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-27": {"name": "<strong>27) \u00bfQu\u00e9 pasa si no hay texto entre las etiquetas o si un texto fue omitido por error? \u00bfAfectar\u00e1 la visualizaci\u00f3n del archivo HTML?</strong>", "opciones": ["Opci\u00f3n 1", "Si no hay texto entre las etiquetas, tampoco hay nada que darle formato. Por lo que, no aparecer\u00e1 ning\u00fan formato. Algunas etiquetas, como una etiqueta de cierre como la etiqueta &lt;img&gt; no necesitan texto entre ellas.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-28": {"name": "<strong>28) \u00bfEs posible establecer colores espec\u00edficos para los bordes de las tablas?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Si, usando hojas de estilo pero los colores en una tabla que no usen hojas de estilo ser\u00e1n los mismos que los del color del texto."], "correcta": "2"}, "pregunta-29": {"name": "<strong>29) \u00bfC\u00f3mo se crea un enlace que se conectar\u00e1 a otra p\u00e1gina web cuando se hace clic en \u00e9l?</strong>", "opciones": ["Utilice la etiqueta href. El formato general para esto es: &lt;a href=\"sitio\"&gt;texto&lt;/a&gt; reemplazando \"sitio\" con la URL real de la p\u00e1gina, a la que se supone que est\u00e1 vinculado cuando se hace clic en el texto.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-30": {"name": "<strong>30) \u00bfQu\u00e9 otras formas se pueden utilizar para alinear las im\u00e1genes y envolver el texto?</strong>", "opciones": ["Opci\u00f3n 1", "Una forma \u00fatil de envolver el texto alrededor de una imagen es usar hojas de estilo o tablas. ", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-31": {"name": "<strong>31) \u00bfUn solo enlace de texto puede apuntar a dos p\u00e1ginas web diferentes?</strong>", "opciones": ["No. La etiqueta &lt;a&gt; s\u00f3lo acepta un \u00fanico atributo href, y apuntar a una sola p\u00e1gina web.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-32": {"name": "<strong>32) \u00bfCu\u00e1l es la diferencia entre las listas de directorios y men\u00fas y las listas desordenadas?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "La diferencia es que el directorio y las listas de men\u00fas no incluyen atributos que permita cambiar el estilo de la vi\u00f1eta."], "correcta": "2"}, "pregunta-33": {"name": "<strong>33) \u00bfSe puede cambiar el color de las vi\u00f1etas?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "El color de vi\u00f1eta es el mismo que el del primer car\u00e1cter del elemento de la lista. Si rodea el &lt;li&gt; y el primer car\u00e1cter con un grupo de etiquetas &lt;font&gt; con el conjunto de atributos de color, el color de &nbsp;vi\u00f1eta y el primer car\u00e1cter, ser\u00e1n de&nbsp; color distinto al del texto."], "correcta": "2"}, "pregunta-34": {"name": "<strong>34) \u00bfCu\u00e1les son los l\u00edmites del tama\u00f1o del campo de texto?</strong>", "opciones": ["Opci\u00f3n 1", "El tama\u00f1o de un campo de texto predeterminado es de unos 13 caracteres. Sin embargo, si incluye el atributo size se puede establecer que el valor del tama\u00f1o sea tan bajo como 1. El valor del tama\u00f1o m\u00e1ximo esta determinado por el ancho del navegador. Si el atributo size se establece en 0, el tama\u00f1o se establecer\u00e1 en el tama\u00f1o de 13 caracteres.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-35": {"name": "<strong>35) \u00bfLas etiquetas &lt;th&gt; siempre tienen que ir al principio de una fila o columna?</strong>", "opciones": ["Toda etiqueta &lt;tr&gt; se puede cambiar por una etiqueta &lt;th&gt;. Esto hace que el texto que est\u00e1 en la etiqueta &lt;th&gt; se muestre en negrita en el navegador. Aunque las etiquetas &lt;th&gt; se usan principalmente para los headings, no es necesario usarlas solo para ellos.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-36": {"name": "<strong>36) \u00bfCu\u00e1l es la relaci\u00f3n entre los atributos 'border' y 'rule'?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Los bordes de celda tienen predeterminados un grosor de 1 p\u00edxel, los cuales se a\u00f1aden en forma autom\u00e1tica entre celdas si el atributo 'border' se establece en un valor diferente de cero. De igual manera, si el atributo border no se incluye, aparece un borde predeterminado de 1 p\u00edxel, si el atributo rules se adhiere a la etiqueta &lt;table&gt;."], "correcta": "2"}, "pregunta-37": {"name": "<strong>37) \u00bfQu\u00e9 es un 'marquee'?</strong>", "opciones": ["Opci\u00f3n 1", "Una Marquee te permite poner &nbsp;un texto de desplazamiento en una p\u00e1gina web. Para ello, &nbsp;se coloca cualquier texto que desees que aparezca desplaz\u00e1ndose dentro de las etiquetas &lt;marquee&gt; y &lt;/marquee&gt;.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-38": {"name": "<strong>38) \u00bfC\u00f3mo se crea un texto en una p\u00e1gina web que le permitir\u00e1 enviar un correo electr\u00f3nico al hacer clic?</strong>", "opciones": ["Opci\u00f3n 1", "Utilizando el comando mailto dentro de la etiqueta href. <strong>Ejemplo:</strong>&lt;a href=\u201dmailto:youremailaddress\u201d&gt;text to be clicked&lt;/a&gt;", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-39": {"name": "<strong>39) \u00bfSon las etiquetas &lt;br&gt; la \u00fanica manera de separar secciones de texto?</strong>", "opciones": ["No. La etiqueta &lt;br&gt; es una manera de separar l\u00edneas de texto. Hay otras etiquetas, como &lt;p&gt; y &lt;blockquote&gt;, que &nbsp;tambi\u00e9n sirven para separar secciones de texto.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-40": {"name": "<strong>40) \u00bfHay casos en los que el texto aparecer\u00e1 fuera del navegador?</strong>", "opciones": ["Opci\u00f3n 1", "Si el texto forma parte de una celda de tabla con un ancho definido, el texto puede extenderse m\u00e1s all\u00e1 de la ventana del navegador.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-41": {"name": "<strong>41) \u00bfEn qu\u00e9 se diferencian los enlaces activos de los enlaces normales?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "El color para los enlaces normales y activos es el azul. Varios navegadores reconocen un enlace activo, cuando el cursor del rat\u00f3n se coloca sobre ese enlace. Se consideran normales aquellos que no tienen un cursor de rat\u00f3n sobre ese enlace."], "correcta": "2"}, "pregunta-42": {"name": "<strong>42) \u00bfLimitan las hojas de estilo el n\u00famero de nuevas definiciones de estilo que se pueden incluir entre par\u00e9ntesis?</strong>", "opciones": ["Opci\u00f3n 1", "Las hojas de estilo no limitan el n\u00famero de definiciones de estilo que pueden ser incluidas entre par\u00e9ntesis para un selector determinado.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-43": {"name": "<strong>43) \u00bfPuedo especificar valores fraccionarios como 670 o 973 para el grosor de la fuente (font-weight)?</strong>", "opciones": ["Eso depende del navegador, pero el est\u00e1ndar no soporta valores de peso fraccionarios. Los valores para ser aceptados deben terminar con dos ceros.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-44": {"name": "<strong>44) \u00bfCu\u00e1l es la jerarqu\u00eda que se sigue cuando se trata de hojas de estilo?</strong>", "opciones": ["La definici\u00f3n m\u00e1s cercana a la etiqueta real tiene prioridad. El estilo en l\u00ednea tiene prioridad sobre hojas de estilo incrustadas que tienen prioridad sobre hojas de estilo externas.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-45": {"name": "<strong>45) \u00bfPueden agruparse varios selectores con nombres de clase?</strong>", "opciones": ["Opci\u00f3n 1", "Se puede definir varios selectores con la misma definici\u00f3n de estilo haciendo la separaci\u00f3n con comas. Esta t\u00e9cnica tambi\u00e9n puede funcionar para selectores con nombres de clase.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-46": {"name": "<strong>46) \u00bfQu\u00e9 sucede si se abre el archivo CSS externo en un navegador?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "La \u00fanica forma de usar un archivo CSS externo es haciendo referencia a \u00e9l utilizando &lt;link/&gt; tag dentro de otro documento HTML. Esto es porque cuando se intenta abrir el archivo CSS externo en un navegador, el navegador no lo puede abrir porque el archivo tiene una extensi\u00f3n distinta."], "correcta": "2"}, "pregunta-47": {"name": "<strong>47) \u00bfC\u00f3mo se convierte una imagen en una imagen de fondo de una p\u00e1gina web?</strong>", "opciones": ["Opci\u00f3n 1", "Utilizando un c\u00f3digo de etiqueta despu\u00e9s de la etiqueta &lt;/head&gt; como se indica: &lt;body background = \"image.gif\"&gt; . Reemplace image.gif con el nombre de su archivo de imagen. Esto toma la foto y la convierte en la imagen de fondo de su p\u00e1gina web.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-48": {"name": "<strong>48) \u00bfQu\u00e9 sucede si la propiedad tipo lista se utiliza en un elemento no listado como un p\u00e1rrafo?</strong>", "opciones": ["La propiedad va a ser &nbsp;ignorada y no afectar\u00e1 al p\u00e1rrafo.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-49": {"name": "<strong>49) \u00bfCu\u00e1ndo es apropiado usar frames?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Los frames (marcos) hacen que la navegaci\u00f3n por un sitio sea m\u00e1s f\u00e1cil. Si los enlaces principales hacia el sitio est\u00e1n en un frame que aparece en la parte superior o a lo largo del borde del navegador el contenido de los enlaces se muestra en el resto de la ventana del navegador."], "correcta": "2"}, "pregunta-50": {"name": "<strong>50) \u00bfQu\u00e9 sucede si el n\u00famero de valores en las filas o el atributo cols no suma el 100 por ciento?</strong>", "opciones": ["Opci\u00f3n 1", "El navegador calcula el tama\u00f1o de los marcos en relaci\u00f3n con la suma total de los valores. Si el atributo cols se establece en 100%, 200% &nbsp;y tienen menos del 100%, no va a mostrar los dos marcos verticales.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-51": {"name": "<strong>51) \u00bfQu\u00e9 navegadores soportan HTML5?</strong>", "opciones": ["Opci\u00f3n 1", "Las \u00faltimas versiones de Google Opera, Apple Safari, Chrome, y Mozilla Firefox &nbsp;son compatibles con casi todas las funciones HTML5.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-52": {"name": "<strong>52) Nombra dos nuevas etiquetas incluidas en el HTML 5</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "<strong>&nbsp;</strong>&lt;Video&gt; y &lt;Audio&gt; son nuevas etiquetas que est\u00e1n incluidas en la versi\u00f3n HTML5. Se usan generalmente como sustituto de Flash, Silverlight, y tecnolog\u00edas similares para hacer la reproducci\u00f3n de elementos multimedia."], "correcta": "2"}, "pregunta-53": {"name": "<strong>53) \u00bfSabes cu\u00e1les son las dos etiquetas sem\u00e1nticas que se incluyen en la versi\u00f3n HTML5?</strong>", "opciones": ["Las etiquetas sem\u00e1nticas incluidas recientemente en HTML5 son &lt;article&gt; y &lt;section&gt;. Una etiqueta de art\u00edculo representa un bloque completo de contenido que es una secci\u00f3n m\u00e1s grande.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-54": {"name": "<strong>54) \u00bfQu\u00e9 es &lt;figure&gt; en HTML5?</strong>", "opciones": ["Opci\u00f3n 1", "Es la etiqueta que representa una pieza de contenido de flujo aut\u00f3nomo.&nbsp; Utilizada como unidad \u00fanica y referencia del flujo principal del documento.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-55": {"name": "<strong>55) \u00bfPara qu\u00e9 sirve el elemento Canvas?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "El elemento lienzo o Canvas&nbsp; ayuda en la construcci\u00f3n gr\u00e1ficos, cuadros, evitar Photoshop y para crear im\u00e1genes 2D y colocarlas directamente en el c\u00f3digo HTML5."], "correcta": "2"}, "pregunta-56": {"name": "<strong>56) \u00bfCu\u00e1les son los nuevos elementos FORM disponibles en HTML5?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Los nuevos formulario en HTML5 ofrecen mayor funcionalidad y mejor que las versiones anteriores. Etiquetas para llevar a cabo estas funciones son:<br>1) &lt;datalist&gt; -&nbsp; etiqueta utilizada para especificar una lista de opciones para &nbsp;controles de entrada.<br>2) &lt;keygen&gt; - &nbsp;etiqueta  que representa un campo generador de pares de claves.<br> 3) &lt;output&gt; - representa el resultado de cualquier c\u00e1lculo de scripting."], "correcta": "2"}, "pregunta-57": {"name": "<strong>57) Indica dos beneficios del Almacenamiento Web HTML5</strong>", "opciones": ["Opci\u00f3n 1", "Dos beneficios de Almacenamiento Web HTML5 son: <br> -Puede almacenar hasta 10 MB de datos, lo cual es m\u00e1s de lo que tienen las cookies.<br> -Los datos guardados de web, no se pueden transferir con la solicitud HTTP. Esto aumenta el rendimiento de la aplicaci\u00f3n.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-58": {"name": "<strong>58) \u00bfCu\u00e1les son los dos tipos de almacenamiento web en HTML5?</strong>", "opciones": ["Tipos de almacenamiento de HTML5:<br> <strong>Almacenamiento de sesiones:</strong> Almacena s\u00f3lo datos de la sesi\u00f3n actual. Lo que significa que los datos almacenados durante la sesi\u00f3n se borrar\u00e1n de forma autom\u00e1tica cuando se cierre el navegador.<br> <strong>Almacenamiento local:</strong> El almacenamiento local es otro tipo de almacenamiento Web HTML5. En el almacenamiento local, los datos no se borran autom\u00e1ticamente cuando se cierre la ventana del navegador actual.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-59": {"name": "<strong>59) \u00bfQu\u00e9 es el Application Cache en HTML5 y por qu\u00e9 se utiliza?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Es &nbsp;una aplicaci\u00f3n web que est\u00e1 almacenada en cach\u00e9. Puede ser accesible sin tener conexi\u00f3n a Internet. Algunas ventajas de Application Cache:<br><strong>Navegaci\u00f3n fuera de l\u00ednea</strong> - Los usuarios pueden usar la aplicaci\u00f3n cuando est\u00e1n fuera de l\u00ednea.<br><strong>Velocidad</strong> - cargan m\u00e1s r\u00e1pido los recursos con cach\u00e9.<br><strong>Reducir la carga del servidor</strong> - El navegador web solo descargar\u00e1 los recursos actualizados del servidor."], "correcta": "2"}, "pregunta-60": {"name": "<strong>60) Explique cinco nuevos tipos de entrada proporcionados por HTML5 para formularios</strong>", "opciones": ["Opci\u00f3n 1", "Los nuevos e importantes tipos de datos que ofrece HTML5 son:<br> <strong>Fecha:</strong> Ofrece al usuario oportunidad de seleccionar una fecha.<br> <strong>Fecha-hora-local</strong>: Este entrada permite al usuario escoger una fecha y hora sin zona horaria.<br> <strong>Hora de la cita</strong>: Esta entrada ofrece al usuario seleccionar una fecha y hora con zona horaria.<br> <strong>Mes:</strong> Da oportunidad &nbsp;al usuario de seleccionar un mes y un a\u00f1o<br> <strong>Correo electr\u00f3nico</strong>: Estos campos de entrada contienen un correo electr\u00f3nico o direcci\u00f3n", "Opci\u00f3n 1"], "correcta": "1"}}, "javascript": {"pregunta-1": {"name": "<strong>1. \u00bfQu\u00e9 es JavaScript?</strong>", "opciones": ["Opci\u00f3n 1", "JavaScript es un lenguaje de programaci\u00f3n que ha sido concebido para profesionales y todos los que se desenvuelven en el desarrollo de paginas web. Es un lenguaje que funciona del lado del cliente y servidor, por tanto, son los navegadores los que se ocupan de interpretar el lenguaje Javascript. Vale resaltar que JavaScript no es lo mismo que Java.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-2": {"name": "<strong>2. Enumera las diferencias entre Java y JavaScript</strong>", "opciones": ["Las principales diferencias son: <br><ol><li><strong>JavaScript</strong> ha sido un lenguaje interpretado, y <strong>Java</strong> compilado. Los programas de <strong>JavaScript</strong> son archivos de texto que se integra directamente en las p\u00e1ginas HTML y es interpretado (sin estar compilado) por el cliente (navegador), mientras que en <strong>Java</strong> se compilan a un archivo especial para que ser optimizados a un lenguaje intermedio llamado bytecode, y lei\u0301do posteriormente en un ordenador que lo ejecute.</li><li><strong>Java</strong> es un lenguaje de programaci\u00f3n orientado a objetos puros (OOP), mientras que <strong>JavaScript</strong> esta\u0301 basado en prototipos y, puede emular la programaci\u00f3n orientada a objetos.</li><li><strong>JavaScript</strong> es gestionado por ECMAScript, una organizaci\u00f3n sin \u00e1nimo de lucro. En <strong>Java</strong>, el control lo tiene Oracle, una empresa privada que lo gestiona en funci\u00f3n de sus intereses.</li><li><strong>JavaScript</strong> se depura en una fase y Java en dos. JavaScript hace que el co\u0301digo trabaje informando de los errores que se producen a medida que se ejecutando. <strong>Java</strong>, primero hace la fase de compilacio\u0301n y el compilador nos indica los posibles errores de sintaxis presentes en nuestro co\u0301digo. Despu\u00e9s, se ejecuta el programa, donde pueden surgir errores para ser depurados.</li><li><strong>Java</strong> tiene variables definidas que no se pueden cambiar y es m\u00e1s complejo, <strong>JavaScript</strong> puede ser cambiante, d\u00e1ndole flexibilidad y es m\u00e1s sencillo.</li><li>&nbsp;<strong>JavaScript</strong> es d\u00e9bilmente tipado, una misma variable puede contener primero un texto, luego un nu\u0301mero, un array o un objeto. Esto, que parece una ventaja, tambie\u0301n es fuente de posibles errores si no controlamos correctamente lo que ocurre en nuestro co\u0301digo. <strong>Java</strong> es fuertemente tipado, todas las variables tienen un tipo determinado y, una vez definidas, no se pueden cambiar.</li></ol>", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-3": {"name": "<strong> 3. </strong><strong>\u00bfCuales son los tipos de datos JavaScript?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Los tipos de datos JavaScript son: String, booleano, Objeto, N\u00famero, Indefinido."], "correcta": "2"}, "pregunta-4": {"name": "<strong>4. \u00bfPara qu\u00e9 sirve la funci\u00f3n isNaN?</strong>", "opciones": ["Opci\u00f3n 1", "La funci\u00f3n isNan devuelve verdadero si el argumento no es un n\u00famero porque de lo contrario arrojar\u00eda un falso.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-5": {"name": "<strong>5. Entre JavaScript y un script ASP, \u00bfcual es m\u00e1s r\u00e1pido?</strong>", "opciones": ["JavaScript es m\u00e1s r\u00e1pido porque es un lenguaje del lado del cliente y no necesita la ayuda del servidor web para ejecutarse. Por otra parte el ASP es un lenguaje del lado del servidor. Motivo por el que siempre es m\u00e1s lento que JavaScript. Sin embargo, Javascript ahora, tambi\u00e9n puede ser usado como un lenguaje de lado del servidor (server side) (nodejs).", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-6": {"name": "<strong>6. \u00bfQu\u00e9 es el infinito negativo?</strong>", "opciones": ["Opci\u00f3n 1", "Infinito Negativo es un n\u00famero en JavaScript que puede ser derivado, al dividir el n\u00famero negativo entre cero.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-7": {"name": "<strong> 7. \u00bfEs posible dividir el c\u00f3digo JavaScript en varias l\u00edneas?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Si, haciendo una declaracion string con el uso de una barra invertida (slash), '\\', al terminar la primera l\u00ednea."], "correcta": "2"}, "pregunta-8": {"name": "<strong> 8. \u00bfQu\u00e9 empresa desarroll\u00f3 JavaScript?</strong>", "opciones": ["Opci\u00f3n 1", "La compa\u00f1\u00eda de software Netscape fue quien desarroll\u00f3 el JavaScript.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-9": {"name": "<strong>9. \u00bfQu\u00e9 son las variables no declaradas y no definidas?</strong>", "opciones": ["<strong>Variables no declaradas</strong>: son las que no existen en un programa, y no se declaran. Si el programa trata de leer su valor entonces va a arrojar un error.<br><strong>Variables no definidas</strong>: son aquellas declaradas en el programa, pero no tienen asignado ning\u00fan valor. Si el programa quiere leer el valor de &nbsp;variable no definida, se devuelve un valor no definido.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-10": {"name": "<strong>10. Escriba un c\u00f3digo para a\u00f1adir nuevos elementos din\u00e1micamente</strong>", "opciones": ["&lt;html&gt;&lt;head&gt;&lt;title&gt; A\u00f1adiendo elementos de forma din\u00e1mica con nodos de texto &lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div  id=\"nodo-texto\"&gt;&lt;/div&gt; &lt;script type=\"application/javascript\"&gt; var elemento = document.createElement(\"H1\") // Creamos un elemento del tipo h1 var texto = document.createTextNode(\"Este es un texto creado a trav\u00e9s de un nodo de texto\"); // Creamos un texto con un nodo de texto elemento.appendChild(texto); // Agregamos el nodo de texto al elemento document.getElementById('nodo-texto').appendChild(elemento) // Para podemos mostrarlo en el DOM lo seleccionamos el div donde lo queremos introducir y le pasamos como hijo el h1 &lt;/script&gt; &lt;/body&gt; &lt;/html&gt;", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-11": {"name": "<strong>11. \u00bfQu\u00e9 son las variables globales, c\u00f3mo se declaran estas variables y cu\u00e1les son los problemas asociados con su uso?</strong>", "opciones": ["Opci\u00f3n 1", "Las variables globales son las que est\u00e1n a disposici\u00f3n para utilizar en todo el c\u00f3digo, esto quiere decir, que no tienen alcance. La palabra clave (var) es utilizada para declarar una variable u objeto local. Si la palabra clave (var) es omitida, se declara como variable global.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-12": {"name": "<strong>12. \u00bfQu\u00e9 es un cuadro de di\u00e1logo?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Es un cuadro que permite al usuario introducir datos, mediante un cuadro de texto. La etiqueta y el cuadro se suministrar\u00e1n para que se pueda ingresar el texto o el n\u00famero."], "correcta": "2"}, "pregunta-13": {"name": "<strong> 13. \u00bfQu\u00e9 significa la palabra clave 'this' en JavaScript?</strong>", "opciones": ["La palabra clave 'this' se refiere al objeto desde donde fue llamado. ", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-14": {"name": "<strong>14. Explique el funcionamiento de los temporizadores en JavaScript y las desventajas de usarlos, si las hay.</strong>", "opciones": ["Opci\u00f3n 1", "Los temporizadores se usan para ejecutar un fragmento de c\u00f3digo en un momento determinado o para repetir el c\u00f3digo en un espacio de tiempo se\u00f1alado. Esto se hace utilizando las funciones setTimeout, setInterval y clearInterval,<br> La funci\u00f3n <strong>setTimeout</strong> (function, delay), es una funcion que se usa para iniciar un temporizador que llama a una funcion luego del retardo especificado. La funci\u00f3n <strong>setInterval</strong> (function, delay) es utilizada para ejecutar repetidamente una funci\u00f3n el el retardo (delay) que se especifique y solo se detiene cuando se cancela. La funci\u00f3n <strong>clearInterval</strong>(id) es la que se\u00f1ala&nbsp; al temporizador que se pare. <br>Los temporizadores funcionan dentro de un hilo \u00fanico, debido a esto, &nbsp;los eventos pueden quedar 'en cola', a la espera de ser ejecutados. ", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-15": {"name": "<strong> 15. \u00bfQu\u00e9 s\u00edmbolo se utiliza para los comentarios en Javascript?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Se usa (//) para comentarios de una sola l\u00ednea<br>Para comentarios multi-linea se abre con (/*) y se cierra con (*/). "], "correcta": "2"}, "pregunta-16": {"name": "<strong>16. \u00bfCu\u00e1l es la diferencia entre ViewState y SessionState?</strong>", "opciones": ["ViewState es muy espec\u00edfico para la p\u00e1gina de una sesi\u00f3n.<br>SessionState es espec\u00edfico para los datos del usuario, a los que se entra en las p\u00e1ginas de la aplicaci\u00f3n web. ", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-17": {"name": "<strong>17. \u00bfQu\u00e9 es el operador ===?</strong>", "opciones": ["El operador (===) es llamado operador de igualdad estricta, el cual arroja verdadero (true) cuando los dos operandos poseen el mismo valor sin ning\u00fan tipo de conversi\u00f3n.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-18": {"name": "<strong>18. Explique c\u00f3mo se puede enviar un formulario usando JavaScript.</strong>", "opciones": ["Opci\u00f3n 1", "Si, se puede hacer usando: document.form[0].submit();", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-19": {"name": "<strong>19. \u00bfJavaScript es compatible con la conversi\u00f3n de tipos autom\u00e1tica (automatic type conversion)?</strong>", "opciones": ["S\u00ed, Javascript es compatible con los tipos de &nbsp;conversi\u00f3n autom\u00e1tica. Es un tipo de conversi\u00f3n muy usada por los desarrolladores de JavaScript.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-20": {"name": "<strong> 20. \u00bfC\u00f3mo se puede cambiar el estilo/clase de un elemento?</strong>", "opciones": ["Opci\u00f3n 1", "De la siguiente forma: document.getElementById(\"myText\").style.fontSize = \"20?;<br> o de esta otra: document.getElementById(\"myText\").className = \"anyclass\";", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-21": {"name": "<strong>21. Explica c\u00f3mo leer y escribir un archivo usando JavaScript.</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Hay dos formas de leer y escribir un archivo usando JavaScript:<br>-Utilizando extensiones JavaScript.<br>-A trav\u00e9s de una p\u00e1gina web y objetos ActiveX."], "correcta": "2"}, "pregunta-22": {"name": "<strong> 22. \u00bfCu\u00e1les son todos los bucles en JavaScript?</strong>", "opciones": ["Las estructuras de bucles en Javascript son: For, While, Do-While y forEach", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-23": {"name": "<strong>23. \u00bfA qu\u00e9 se le llama tipificaci\u00f3n de variables (variable typing) en Javascript?</strong>", "opciones": ["Opci\u00f3n 1", "La tipificaci\u00f3n de variables se usa para asignar un n\u00famero a una variable, y esta misma variable se puede asignar a un string. <strong>Ejemplo</strong>: i = 10; i = \"cadena\";", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-24": {"name": "<strong>24. \u00bfC\u00f3mo se puede convertir un string de cualquier base a un entero en JavaScript?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "A trav\u00e9s del uso de la funci\u00f3n parseInt(), ya que, esta funci\u00f3n toma el string a convertir como primer par\u00e1metro, y como segundo par\u00e1metro usa la base del string dado. Para convertir 4F (de base 16) a entero, el c\u00f3digo utilizado ser\u00e1: <br>parseInt (\"4F\", 16);"], "correcta": "2"}, "pregunta-25": {"name": "<strong>25. Explica la diferencia entre '==' y '===='</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "La diferencia es que (\"==\") chequea solamente la igualdad de valor, pero (\"====\") es la prueba de igualdad m\u00e1s estricta y adem\u00e1s, devuelve falso si el tipo o el valor de las dos variables es distinto."], "correcta": "2"}, "pregunta-26": {"name": "<strong>26. \u00bfCu\u00e1l ser\u00eda el resultado de 3+2+''7''?</strong>", "opciones": ["Dado que 3 y 2 son n\u00fameros enteros, se sumar\u00e1n num\u00e9ricamente. Y como el 7 es una cadena, se va a aplicar su concatenaci\u00f3n, as\u00ed que el resultado en este caso ser\u00eda 57.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-27": {"name": "<strong>27. \u00bfC\u00f3mo se puede detectar el sistema operativo de la m\u00e1quina del cliente?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Es necesario usar la cadena navigator.platform"], "correcta": "2"}, "pregunta-28": {"name": "<strong>28. \u00bfQu\u00e9 significa NULL en Javascript?</strong>", "opciones": ["El valor (NULL) es utilizado para representar a ning\u00fan valor o ning\u00fan objeto. Esto quiere decir, que no representa a ning\u00fan objeto o cadena,&nbsp; ni valor booleano, ni&nbsp; n\u00famero u objeto de un array.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-29": {"name": "<strong>29. \u00bfCu\u00e1l es la funci\u00f3n del operador delete?</strong>", "opciones": ["Opci\u00f3n 1", "La palabra clave (delete) es usada para eliminar la propiedad, as\u00ed como su valor. ", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-30": {"name": "<strong>30. \u00bfQu\u00e9 es un valor no definido en JavaScript?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Un valor no definido significa que: <br>-La variable usada en el c\u00f3digo no existe.<br> -La variable no est\u00e1 acreditada a ning\u00fan valor.<br>-La propiedad no existe. "], "correcta": "2"}, "pregunta-31": {"name": "<strong>31. \u00bfCu\u00e1les son todos los tipos de ventanas emergentes disponibles en JavaScript?</strong>", "opciones": ["Alerta (alert), Confirmar (confirm) y Entrada por teclado(prompt). <br>alert<br>('Esto es una alerta')<br>confirm('Esto es una ventana de confirmaci\u00f3n con un mensaje', true)<br>prompt('Esto es una entrada por teclado, introduce cualquier valor:  ')<br>", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-32": {"name": "<strong>32. \u00bfPara qu\u00e9 se utiliza Void (0)?</strong>", "opciones": ["Opci\u00f3n 1", "Se usa Void(0) para prevenir que la p\u00e1gina sea actualizada. Tambi\u00e9n, se usa para llamar a otro m\u00e9todo sin que se actualice la p\u00e1gina.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-33": {"name": "<strong>33. </strong><strong>\u00bfC\u00f3mo se puede forzar a una p\u00e1gina a cargar otra p\u00e1gina en JavaScript?</strong>", "opciones": ["Opci\u00f3n 1", "Se puede usar el siguiente c\u00f3digo para lograr objetivo deseado.<br>&lt;script type=\"text/application/javascript\" &gt; <br> document.location.href = 'https://www.google.co.ve/'; <br> &lt;/script&gt;", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-34": {"name": "<strong>34. \u00bfCu\u00e1l es el tipo de datos de variables en JavaScript?</strong>", "opciones": ["Todas las variables en JavaScript son del tipo objetos. ", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-35": {"name": "<strong>35. \u00bfCu\u00e1l es la diferencia entre un cuadro de alerta y un cuadro de confirmaci\u00f3n?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "El cuadro de alerta s\u00f3lo muestra un bot\u00f3n, el bot\u00f3n OK. El cuadro de confirmaci\u00f3n presenta dos botones: el de OK y Cancelar. "], "correcta": "2"}, "pregunta-36": {"name": "<strong>36. \u00bfQu\u00e9 son los caracteres de escape?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Los caracteres de escape (barra invertida) son utilizados para trabajar con caracteres especiales, entre ellos; comillas dobles, comillas simples, s\u00edmbolos y ap\u00f3strofes.<strong>Ejemplo:</strong><br>document.write \"I m a \"good\" boy\"<br>document.write \"I m a \\\"good\\\" boy\""], "correcta": "2"}, "pregunta-37": {"name": "<strong>37. \u00bfQu\u00e9 son las cookies de JavaScript?</strong>", "opciones": ["Son archivos peque\u00f1os de prueba que se guardan en un ordenador y &nbsp;se crean cuando el usuario visita los sitios web para guardar informaci\u00f3n&nbsp; necesaria.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-38": {"name": "<strong>38. Explique el m\u00e9todo pop()en JavaScript.</strong>", "opciones": ["Opci\u00f3n 1", "El m\u00e9todo pop() es un m\u00e9todo parecido al m\u00e9todo shift(), con la diferencia de que el Shift funciona al comienzo del array. Tambi\u00e9n, el m\u00e9todo pop() aparta el \u00faltimo elemento del array dado y lo devuelve. Por ello, el array que llama es entonces alterado. <strong>Ejemplo:</strong>var ropa= [\"Camisa\", \"Pantal\u00f3n\", \"Franela\"];<br>ropa.pop();<br>//Ahora ropa se convierte en camisa, pantal\u00f3n.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-39": {"name": "<strong>39. Mencione cual es la desventaja de usar innerHTML en JavaScript.</strong>", "opciones": ["Si se usa innerHTML en JavaScript la desventaja es:<br>-Se reemplaza el contenido en todas partes<br>-El contenido innerHTML es re-analizado y elaborado en elementos, lo que hace que sea mucho m\u00e1s lento.<br>-El innerHTML no suministra validaci\u00f3n, por lo tanto, potencialmente se puede insertar HTML v\u00e1lido y no v\u00e1lido en el documento y da\u00f1arlo.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-40": {"name": "<strong>40. \u00bfQu\u00e9 son las declaraciones break y continue?</strong>", "opciones": ["Opci\u00f3n 1", "La declaraci\u00f3n Break sirve para salir del bucle actual. La declaracion continue sirve para continuar con la pr\u00f3xima sentencia del bucle.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-41": {"name": "<strong>41. \u00bfCu\u00e1les son los dos grupos b\u00e1sicos de tipos de datos en JavaScript?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "<strong>Primitivos:</strong> Son el n\u00famero y &nbsp;tipos de datos booleanos.<br><strong>Tipos de referencia</strong>: son los tipos m\u00e1s complejos, como las string y las fechas. "], "correcta": "2"}, "pregunta-42": {"name": "<strong>42. \u00bfC\u00f3mo se pueden crear objetos gen\u00e9ricos?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Los objetos gen\u00e9ricos se pueden crear como:<br>var myObjeto = new Object({ 'nombre': 'Diego', 'apeliido': 'Querales', 'edad': 25, }) <br> // Salida por consola<br> {nombre: \"Diego\", apeliido: \"Querales\", edad: 25}"], "correcta": "2"}, "pregunta-43": {"name": "<strong>43. \u00bfPara qu\u00e9 sirve el operador typeof?</strong>", "opciones": ["Opci\u00f3n 1", "Typeof': es un operador que se usa para regresar una descripci\u00f3n de cadena del tipo de una variable.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-44": {"name": "<strong>44. \u00bfQu\u00e9 palabras clave se usan para manejar las excepciones?</strong>", "opciones": ["Try, Catch y Finally son las que se utilizan para manejar excepciones en lenguaje JavaScript<br>Try{ <br>Code<br> } Catch(exp){<br>C\u00f3digo para lanzar una excepci\u00f3n <br> } <br> Finally <br> El c\u00f3digo se ejecuta o bien termina con \u00e9xito despu\u00e9s del catch. <br> }", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-45": {"name": "<strong>45. \u00bfQu\u00e9 palabra clave se utiliza para mostrar un texto en pantalla?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "document.write (\"Bienvenido\") se usa para imprimir el texto - 'Bienvenido' en la pantalla."], "correcta": "2"}, "pregunta-46": {"name": "<strong>46. \u00bfPara qu\u00e9 sirve el evento blur?</strong>", "opciones": ["Opci\u00f3n 1", "El evento blur es usado para desaparecer el enfoque del objeto especifico. <br> <strong>C\u00f3digo Javascript</strong><br> var myForm = document.getElementById(\"form\"); <br> myForm.addEventListener(\"focus\", function (event) { <br> event.target.style.background = \"pink\"; <br> }, true); <br> myForm.addEventListener(\"blur\", function (event) { <br> event.target.style.background = \"\"; <br> }, true);<br> <strong>C\u00f3digo HTML</strong><br>&lt;form id=\"form\"&gt;<br> &lt;input type=\"text\" placeholder=\"text input\"&gt; <br> &lt;input type=\"password\" placeholder=\"password\"&gt; <br> &lt;/form&gt;", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-47": {"name": "<strong>47. \u00bfQu\u00e9 es la tipificaci\u00f3n de variables?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "La tipificaci\u00f3n de variables, sirve para asignar un n\u00famero a una variable y despu\u00e9s asignar un string a la misma variable. <strong>Ejemplo:</strong>i= 8; i=\"john\";"], "correcta": "2"}, "pregunta-48": {"name": "<strong>48. \u00bfC\u00f3mo puedo saber la versi\u00f3n del navegador que est\u00e1 usando el cliente?</strong>", "opciones": ["Mediante navigator.appVersion se puede conseguir la versi\u00f3n del navegador que est\u00e1 usando el cliente ", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-49": {"name": "<strong>49. \u00bfCu\u00e1les son los diferentes tipos de errores en JavaScript?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Se pueden encontrar tres tipos de errores: <strong>-Errores de tiempo de carga</strong>: Son los errores que se originan al cargar una p\u00e1gina web, como son los errores de sintaxis inadecuados, los cuales se conocen como errores de tiempo de carga y producen los errores din\u00e1micamente. <strong>-Errores de tiempo de ejecuci\u00f3n</strong>: Son los errores producidos motivado al mal uso del comando dentro del lenguaje HTML. <strong>-Errores l\u00f3gicos:</strong> Estos errores se producen debido a la mala l\u00f3gica realizada en una funci\u00f3n que tiene una operaci\u00f3n distinta."], "correcta": "2"}, "pregunta-50": {"name": "<strong>50. \u00bfPara qu\u00e9 sirve el m\u00e9todo Push en JavaScript?</strong>", "opciones": ["El m\u00e9todo push es el utilizado para a\u00f1adir o a\u00f1adir uno o m\u00e1s elementos al final de un Array. Cuando se usa este m\u00e9todo, se pueden a\u00f1adir m\u00faltiples elementos pasando m\u00faltiples argumentos.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-51": {"name": "<strong>51. \u00bfQu\u00e9 es el m\u00e9todo unshift en JavaScript?</strong>", "opciones": ["Opci\u00f3n 1", "Unshift es un m\u00e9todo parecido al m\u00e9todo push, el cual funciona al comienzo del array. Este m\u00e9todo es usado para anteponer uno o varios elementos al comienzo del array.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-52": {"name": "<strong>52. \u00bfCu\u00e1l es la diferencia entre JavaScript y Jscript?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Los dos son muy similares. JavaScript fue desarrollado por Netscape y Jscript fue desarrollado por Microsoft."], "correcta": "2"}, "pregunta-53": {"name": "<strong>53.  </strong><strong>\u00bfC\u00f3mo se asignan las propiedades a los objetos?</strong>", "opciones": ["Las propiedades se asignadas a los objetos de la siguiente forma: obj[\"class\"] = 12; <br> o tambi\u00e9n como: obj.class = 12;", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-54": {"name": "<strong>54. \u00bfQu\u00e9 es el modo 'Estricto' (Strict) en JavaScript y c\u00f3mo se puede habilitar?</strong>", "opciones": ["El modo estricto (strict) en JavaScript muestra los errores de un fragmento de c\u00f3digo que anteriormente no mostraba ning\u00fan error. Pero que puede ser problem\u00e1tico e inseguro. En este modo tambi\u00e9n, se resuelven varios errores que dificultan la funci\u00f3n eficiente de los motores de JavaScript. El modo estricto puede ser activado agregando la cadena \"use strict\" sobre el archivo. Esto se puede mostrar con el siguiente ejemplo:<br>function myfunction() {<br> \"use strict\"; <br> var v = \"Esta es una funci\u00f3n de modo estricto\"; <br> }", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-55": {"name": "<strong>55. \u00bfCu\u00e1l es la forma de obtener el estado de un CheckBox?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "El status se puede adquirir de la siguiente forma.<br>alert(document.getElementById('checkbox1').checked);<br> Si la casilla de verificaci\u00f3n est\u00e1 marcada, esta alerta devolver\u00e1 'True'."], "correcta": "2"}, "pregunta-56": {"name": "<strong>56. Explique para que sirve window.onload y onDocumentReady.</strong>", "opciones": ["Opci\u00f3n 1", "El evento onload no se ejecuta hasta despu\u00e9s que se cargue toda la informaci\u00f3n de la p\u00e1gina. Esto produce un retraso sustancial antes de que se ejecute cualquier c\u00f3digo. Por otro lado, el evento onDocumentReady permite cargar el c\u00f3digo justo despu\u00e9s de cargar el DOM. Esto permite manipular el c\u00f3digo tempranamente. ", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-57": {"name": "<strong> 57. \u00bfC\u00f3mo funcionan los 'closures'  en JavaScript? \u00bfCu\u00e1ndo se utilizan?</strong>", "opciones": ["El closure es una variable declarada localmente y que est\u00e1 relacionada con una funci\u00f3n que sigue en memoria cuando la funci\u00f3n ha regresado. <strong>Ejemplo:</strong> <br> function saludo(mensaje) { <br> console.log(mensaje); <br> } <br> function saludar(nombre, edad) { <br> return nombre +\" dice Hola! tengo\" + edad + \" a\u00f1os\"; <br> } <br> // Generar el mensaje <br> var mensaje= saludar(\"Rafael\", 32); <br> // Expl\u00edcitamente para saludar <br> saludo(mensaje); <br> Esta funci\u00f3n se puede representar mejor usando cierres: <br> function saludar(nombre, edad) { <br> var mensaje= nombre + \"dice Hola! tengo\" + edad + \" a\u00f1os\"; <br> return function saludo() { <br> console.log(mensaje); <br> }; <br> } <br> // Generar el closure <br> var Rafael= saludar(\"Rafael\", 32); <br> // Usa el cierre <br> Rafael(); ", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-58": {"name": "<strong>58. \u00bfC\u00f3mo se puede a\u00f1adir un valor a un array?</strong>", "opciones": ["Opci\u00f3n 1", "Un valor puede ser agregado a un array de la siguiente manera: arr[arr.length] = valor;", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-59": {"name": "<strong>59. \u00bfExplica el bucle de for-in?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "El bucle for-in, es usado para hacer un ciclo a trav\u00e9s de las propiedades que tiene&nbsp; un objeto. La sintaxis del bucle for-in es: <br> for(nombre-de-la-variable in objeto){<br>bloque a ejecutar aqui<br>}<br> En cada repetici\u00f3n, una propiedad del objeto es asociada al nombre de la variable, y el bucle sigue hasta que se terminen todas&nbsp; las propiedades del objeto."], "correcta": "2"}, "pregunta-60": {"name": "<strong>60. Describa las propiedades de una funci\u00f3n an\u00f3nima en JavaScript.</strong>", "opciones": ["Opci\u00f3n 1", "Una funci\u00f3n an\u00f3nima es la que se declara sin ning\u00fan identificador nombrado. Es decir, la funci\u00f3n an\u00f3nima es inaccesible despu\u00e9s de su declaraci\u00f3n.<br>Declaraci\u00f3n de funci\u00f3n an\u00f3nima:<br>var anon = function() { <br> alert('Soy an\u00f3nimo'); <br> };<br> anon(); <br> ", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-61": {"name": "<strong>61. \u00bfCu\u00e1l es la diferencia entre .call() y .apply()?</strong>", "opciones": ["Las funciones .call() y .apply() son &nbsp;similares en cuanto a su uso, pero tienen una peque\u00f1a diferencia. Esto se debe a que, .call() se utiliza cuando el programador conoce el n\u00famero de argumentos de la funci\u00f3n, porque se deben mencionar como argumentos en la sentencia/declaraci\u00f3n de llamada. Por otra parte, .apply() se usa cuando no se conoce el n\u00famero. Entonces, apply() espera que el argumento sea un array. As\u00ed pues, la diferencia b\u00e1sica entre ambas .call() y .apply(), est\u00e1 basada, en la forma en que pasan los argumentos a la funci\u00f3n. Su uso se puede ilustrar con el siguiente ejemplo:<br> var unObjeto = { <br> miPropiedad : 'Foo', <br> miMetodo : function(prefijo, sufijo) { <br> alert(prefijo + this.miPropiedad +sufijo); <br> } <br> }; <br> unObjeto.miMetodo('&lt;', '&gt;'); // alerts &lt;Foo&gt;''. <br> var otroObjeto = { <br> miPropiedad : 'Bar' <br> }; <br> otroObjeto.miMetodo.call(otroObjeto, '&lt;', '&gt;'); // alerta '&lt;Bar&gt;'. <br> otroObjeto.miMetodo.apply(otroObjeto, ['&lt;', '&gt;']); // alerta '&lt;Bar&gt;'", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-62": {"name": "<strong>62. Defina el burbujeo de eventos (Event Bubbling)</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "JavaScript permite que los elementos DOM est\u00e9n anidados uno dentro del otro. Es decir, si se hace clic en el controlador del hijo (child handler), el controlador del parent (parent handler) va a funcionar como si tambi\u00e9n se hubiera hecho clic en el de \u00e9l."], "correcta": "2"}, "pregunta-63": {"name": "<strong>63. \u00bfEs JavaScript sensible a may\u00fasculas y min\u00fasculas? </strong>", "opciones": ["Opci\u00f3n 1", "S\u00ed, JavaScript diferencia entre las &nbsp;may\u00fasculas y las min\u00fasculas. Un ejemplo es, una funci\u00f3n parseInt, no es la misma que la funci\u00f3n Parseint. ", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-64": {"name": "<strong>64. \u00bfQu\u00e9 operadores booleanos se pueden utilizar en JavaScript?</strong>", "opciones": ["Pueden utilizarse el operador 'And' (&amp;&amp;), el operador'Or' (||) y el operador 'Not' (!). Los operadores no llevan los par\u00e9ntesis.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-65": {"name": "<strong>65. \u00bfC\u00f3mo se puede seleccionar un frame en particular desde un hiperv\u00ednculo en JavaScript?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Se puede hacer introduciendo el nombre del frame requerido en el hiperv\u00ednculo y usando el atributo 'target'.<br>&lt;a href=\"/nueva.htm\" target=\"newframe\"&gt;&gt;Nueva P\u00e1gina &lt;/a&gt;"], "correcta": "2"}, "pregunta-66": {"name": "<strong>66. \u00bfCu\u00e1l es la regla de las  de las declaraciones break y continue?</strong>", "opciones": ["La declaraci\u00f3n Break se usa para salir del bucle actual, mientras que&nbsp; la sentencia continue contin\u00faa el bucle actual pero con nueva recurrencia.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-67": {"name": "<strong>67. \u00bfCual es la diferencia entre un web-garden y una web-farm?</strong>", "opciones": ["Opci\u00f3n 1", "web-garden y web-farm son sistemas de alojamiento web. La \u00fanica diferencia es que web-garden es una configuraci\u00f3n que tiene muchos procesadores en un solo servidor, mientras que web-farm es una configuraci\u00f3n m\u00e1s grande, por lo tanto, utiliza m\u00e1s de un servidor.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-68": {"name": "<strong>68. \u00bfC\u00f3mo se asignan las propiedades de los objetos?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "La asignaci\u00f3n de propiedades a objetos se hace de la misma forma que se asigna un valor a una variable. <strong>Ejemplo</strong>: document.form.action=\"submit\" "], "correcta": "2"}, "pregunta-69": {"name": "<strong>69. \u00bfCu\u00e1l es el m\u00e9todo para leer y escribir un archivo en JavaScript?</strong>", "opciones": ["Opci\u00f3n 1", "Se puede hacer utilizando extensiones JavaScript (se ejecuta desde el editor JavaScript). <strong>Ejemplo</strong>, para abrir un archivo.<br>fh = fopen(getScriptPath(), 0);", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-70": {"name": "<strong>70. \u00bfC\u00f3mo se utiliza DOM en JavaScript?</strong>", "opciones": ["DOM (Modelo de objeto de documento) es responsable de la manera en que varios objetos de un documento interact\u00faan entre s\u00ed. DOM es necesario para el desarrollo o creaci\u00f3n de p\u00e1ginas web que poseen objetos como: enlaces, p\u00e1rrafos, entre otros. Estos objetos pueden ser operados para incluir acciones como agregar o eliminar. DOM, es necesario tambi\u00e9n para agregar capacidades adicionales a una p\u00e1gina web. Asimismo, el uso de API proporciona una ventaja sobre otros modelos existentes.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-71": {"name": "<strong>71. \u00bfC\u00f3mo se utilizan los manejadores de eventos en JavaScript?</strong>", "opciones": ["Los eventos son acciones que resultan de las actividades, como: hacer clic en un enlace o rellenar un formulario por parte del usuario. Es necesario un gestor de eventos para gestionar la ejecuci\u00f3n de forma correcta de todos los eventos. El manejador de eventos son un atributo extra del objeto. Este atributo tiene el nombre del evento y la acci\u00f3n tomada, si el evento ocurre. ", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-72": {"name": "<strong>72. Explique el papel de los scripts diferidos en JavaScript.</strong>", "opciones": ["Opci\u00f3n 1", "Por defecto, el an\u00e1lisis del c\u00f3digo HTML, mientras se carga la p\u00e1gina se pausa hasta que el script no se haya dejado de ejecutar. Es decir, si el servidor es lento o el script es pesado, la p\u00e1gina web se muestra con un retraso. Si se usa un script diferido (Deferred), se retarda la ejecuci\u00f3n del script hasta el momento en que se ejecuta el analizador de HTML. Esto disminuye el tiempo de carga de las p\u00e1ginas web y se muestran m\u00e1s r\u00e1pido al usuario. ", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-73": {"name": "<strong>73. \u00bfCu\u00e1les son los distintos componentes funcionales de JavaScript?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Los distintos componentes funcionales de JavaScript son:<br><strong>Funciones de primera clase</strong>: Las funciones de JavaScript se usan como objetos de primera clase. Esto significa que las funciones, se pueden pasar como argumentos a otras funciones, devueltas como valores de otras funciones, asignadas a variables o&nbsp; pueden ser guardadas en estructuradas de datos.<br> <strong>Funciones anidadas</strong>: Son las funciones, que se definen dentro de otras funciones. Se llaman `cada vez que' se nombra la funci\u00f3n principal. "], "correcta": "2"}, "pregunta-74": {"name": "<strong>74. Comente sobre los errores que se pueden mostrar en JavaScript.</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "JavaScript emite un mensaje si se encuentra un error. Los errores reconocidos son:<br><strong>Errores en el tiempo de carga</strong>: Estos errores se encuentran al usar la sintaxis de forma incorrecta, y por tanto, se detectan mientras la p\u00e1gina se est\u00e1 cargando. Por <strong>ejemplo</strong>: los errores en el momento de la carga de la p\u00e1gina, se cuentan como errores de tiempo de carga<br><strong>Errores en tiempo de ejecuci\u00f3n</strong>: Este error &nbsp;aparece mientras el programa est\u00e1 en ejecuci\u00f3n. Es causado por operaciones como por&nbsp; <strong>ejemplo</strong>, divisi\u00f3n de un n\u00famero por cero, o por intentar entrar a un \u00e1rea inexistente de la memoria.<br><strong>Errores de l\u00f3gica:</strong> son causados por el uso de un c\u00f3digo correcto sint\u00e1cticamente pero que no cumple con la tarea requerida, <strong>ejemplo</strong>, un bucle infinito."], "correcta": "2"}, "pregunta-75": {"name": "<strong> 75. </strong><strong>\u00bfQu\u00e9 son los objetos de pantalla?</strong>", "opciones": ["Los objetos de pantalla sirven para leer la informaci\u00f3n de la pantalla del cliente. Sus propiedades&nbsp; son:<br>-AvailHeight: Da la altura de la pantalla del cliente<br>-AvailWidth: Da el ancho de la pantalla del cliente.<br>-ColorDepth: suministra la profundidad de bits de las im\u00e1genes en la pantalla del cliente<br>-Altura: Proporciona la altura general de la pantalla del cliente, incluye la barra de tareas.<br>-Ancho: muestra el ancho total de la pantalla del cliente, incluye la barra de tareas.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-76": {"name": "<strong>76. Explique el m\u00e9todo unshift()</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "El m\u00e9todo unshift(), es funcional al iniciar un array, a diferencia de push(). Este agrega el n\u00famero deseado de elementos a la parte superior de un array. <strong>Ejemplo:</strong> <br>var nombre = [ \"jose\" ];<br> name.unshift (\"eduardo\"); <br> name.unshift (\"pedro\", \"juana\"); <br> console.log(nombre);<br> La salida se muestra a continuaci\u00f3n:<br> [\" pedro\",\" juana\", \" eduardo\", \" juan\"] "], "correcta": "2"}, "pregunta-77": {"name": "<strong>77. Defina las funciones escape() y unescape()</strong>", "opciones": ["Opci\u00f3n 1", "-La funci\u00f3n <strong>escape()</strong> es la responsable de codificar un string para hacer el pase de informaci\u00f3n de un ordenador hacia el otro, a trav\u00e9s de una red.<br><strong>Ejemplo:</strong><br>&lt;script&gt;<br>document.write(escape (\"Hola? Como estas tu?\"));<br>&lt;/script&gt; <br> Salida: Hola%3F%20Como%20estas%20tu%21 <br>-La funci\u00f3n <strong>unescape()</strong> es&nbsp; importante&nbsp; porque es la que decodifica la cadena codificada.<br> <strong>Ejemplo:</strong><br>&lt;script&gt;<br>document.write(unescape(\"Hola%3F%20Como%20estas%20tu%21\"));<br>&lt;/script&gt;&gt;<br>Salida: Hola? Como estas tu? ", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-78": {"name": "<strong>78. \u00bfQu\u00e9 hace decodeURI() y encodeURI()?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "EncodeURl(): es utilizado para convertir URL a su codificaci\u00f3n hexadecimal. &nbsp;DecodeURI() se utiliza para convertir la URL codificada de vuelta a normal.<br> &lt;script&gt; <br> var uri=\"my test.asp?name=st\u00e5le&amp;car=saab\"; <br> document.write(encodeURI(uri)+ \"&lt;br&gt;\"); <br> document.write(decodeURI(uri)); <br> &lt;/script&gt;<br> Salida: my%20test.asp?name=st%C3%A5le&amp;car=saab <br>my test.asp?name=st\u00e5le&amp;car=saab "], "correcta": "2"}, "pregunta-79": {"name": "<strong>79. \u00bfPor qu\u00e9 no se recomienda utilizar innerHTML en JavaScript?</strong>", "opciones": ["Opci\u00f3n 1", "No se recomienda su uso porque es muy lento dado que refresca el contenido cada vez. Es m\u00e1s f\u00e1cil insertar un c\u00f3digo errado en el documento y hacer que la p\u00e1gina web sea inestable.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-80": {"name": "<strong>80. </strong><strong>\u00bfQu\u00e9 declara la siguiente declaraci\u00f3n?</strong> var myArray = [[[]]]; ", "opciones": ["Declara un array tridimensional.", "Opci\u00f3n 1", "Opci\u00f3n 1"], "correcta": "0"}, "pregunta-81": {"name": "<strong>81. \u00bfC\u00f3mo se relacionan JavaScript y ECMA Script?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "ECMA Script son como reglas y directrices, mientras que Javascript es un lenguaje de scripting usado para el desarrollo web."], "correcta": "2"}, "pregunta-82": {"name": "<strong>82. \u00bfQu\u00e9 es el namespacing en JavaScript y c\u00f3mo se utiliza?</strong>", "opciones": ["Opci\u00f3n 1", "Namespacing se utiliza para agrupar funciones, variables, etc con un nombre \u00fanico.&nbsp; Esto mejora la modularidad en codificaci\u00f3n y permite la reutilizaci\u00f3n del c\u00f3digo.", "Opci\u00f3n 1"], "correcta": "1"}, "pregunta-83": {"name": "<strong>83. \u00bfC\u00f3mo se pueden ocultar los c\u00f3digos JavaScript de los navegadores antiguos que no soportan JavaScript?</strong>", "opciones": ["Opci\u00f3n 1", "Opci\u00f3n 1", "Para ocultar c\u00f3digos JavaScript de navegadores antiguos con este c\u00f3digo:<br> A\u00f1ada \"&lt;!--\" sin las comillas en el c\u00f3digo justo despu\u00e9s de la etiqueta &lt;script&gt;. <br> A\u00f1ada \"//--&gt;&gt;\" sin las comillas en el c\u00f3digo justo antes de la etiqueta &lt;script&gt;.<br> Ahora los navegadores antiguos ver\u00e1n este c\u00f3digo JavaScript como un comentario HTML. Mientras que, un navegador que soporte JavaScript, tomar\u00e1 los \"&lt;!--\" y \"//----&gt;\" como comentarios de una l\u00ednea."], "correcta": "2"}}}